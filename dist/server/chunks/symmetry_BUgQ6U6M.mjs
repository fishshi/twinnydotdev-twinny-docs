import { e as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML, s as spreadAttributes } from './astro_D8JpLML5.mjs';
import { g as getImage } from './pages/node_CFP0O91b.mjs';
import { A as Astro__YOlm2, a as Astro__H17VV, b as Astro__25XiUt, c as Astro__ZSJGiy } from './symmetry_provider_D-fYI_dr.mjs';
import 'clsx';

const images = async function(html) {
					const imageSources = {};
					{
											const regex = new RegExp('__ASTRO_IMAGE_="([^"]*' + "\\.\\./\\.\\./\\.\\./\\.\\./assets/symmetry-architecture\\.png" + '[^"]*)"', 'g');
											let match;
											let occurrenceCounter = 0;
											while ((match = regex.exec(html)) !== null) {
													const matchKey = "../../../../assets/symmetry-architecture.png" + '_' + occurrenceCounter;
													const imageProps = JSON.parse(match[1].replace(/&#x22;/g, '"'));
													const { src, ...props } = imageProps;
													
													imageSources[matchKey] = await getImage({src: Astro__YOlm2, ...props});
													occurrenceCounter++;
											}
									}
{
											const regex = new RegExp('__ASTRO_IMAGE_="([^"]*' + "\\.\\./\\.\\./\\.\\./\\.\\./assets/symmetry_disconnected\\.png" + '[^"]*)"', 'g');
											let match;
											let occurrenceCounter = 0;
											while ((match = regex.exec(html)) !== null) {
													const matchKey = "../../../../assets/symmetry_disconnected.png" + '_' + occurrenceCounter;
													const imageProps = JSON.parse(match[1].replace(/&#x22;/g, '"'));
													const { src, ...props } = imageProps;
													
													imageSources[matchKey] = await getImage({src: Astro__H17VV, ...props});
													occurrenceCounter++;
											}
									}
{
											const regex = new RegExp('__ASTRO_IMAGE_="([^"]*' + "\\.\\./\\.\\./\\.\\./\\.\\./assets/symmetry_connected\\.png" + '[^"]*)"', 'g');
											let match;
											let occurrenceCounter = 0;
											while ((match = regex.exec(html)) !== null) {
													const matchKey = "../../../../assets/symmetry_connected.png" + '_' + occurrenceCounter;
													const imageProps = JSON.parse(match[1].replace(/&#x22;/g, '"'));
													const { src, ...props } = imageProps;
													
													imageSources[matchKey] = await getImage({src: Astro__25XiUt, ...props});
													occurrenceCounter++;
											}
									}
{
											const regex = new RegExp('__ASTRO_IMAGE_="([^"]*' + "\\.\\./\\.\\./\\.\\./\\.\\./assets/symmetry_provider\\.png" + '[^"]*)"', 'g');
											let match;
											let occurrenceCounter = 0;
											while ((match = regex.exec(html)) !== null) {
													const matchKey = "../../../../assets/symmetry_provider.png" + '_' + occurrenceCounter;
													const imageProps = JSON.parse(match[1].replace(/&#x22;/g, '"'));
													const { src, ...props } = imageProps;
													
													imageSources[matchKey] = await getImage({src: Astro__ZSJGiy, ...props});
													occurrenceCounter++;
											}
									}
					return imageSources;
			};

			async function updateImageReferences(html) {
				return images(html).then((imageSources) => {
						return html.replaceAll(/__ASTRO_IMAGE_="([^"]+)"/gm, (full, imagePath) => {
								const decodedImagePath = JSON.parse(imagePath.replace(/&#x22;/g, '"'));
		
								// Use the 'index' property for each image occurrence
								const srcKey = decodedImagePath.src + '_' + decodedImagePath.index;
		
								if (imageSources[srcKey].srcSet && imageSources[srcKey].srcSet.values.length > 0) {
										imageSources[srcKey].attributes.srcset = imageSources[srcKey].srcSet.attribute;
								}
		
								const { index, ...attributesWithoutIndex } = imageSources[srcKey].attributes;
		
								return spreadAttributes({
										src: imageSources[srcKey].src,
										...attributesWithoutIndex,
								});
						});
				});
		}
		

		// NOTE: This causes a top-level await to appear in the user's code, which can break very easily due to a Rollup
	  // bug and certain adapters not supporting it correctly. See: https://github.com/rollup/rollup/issues/4708
	  // Tread carefully!
			const html = await updateImageReferences("<p>Symmetry 是一个实验性的去中心化计算网络，允许用户共享和访问计算资源。最初与 Twinny VSCode 扩展集成，Symmetry 有潜力成为开发者、研究人员和数据科学家的强大工具。</p>\n<p><strong>注意</strong>：Symmetry 仍处于 alpha 版本，可能会出现一些问题。如遇到问题，请在 <a href=\"https://github.com/twinnydotdev/symmetry\">https://github.com/twinnydotdev/symmetry</a> 上报告。</p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../../assets/symmetry-architecture.png&#x22;,&#x22;alt&#x22;:&#x22;symmetry 结构图&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>Symmetry 客户端采用 MIT 许可证。</p>\n<p><a href=\"https://github.com/twinnydotdev/symmetry\">https://github.com/twinnydotdev/symmetry</a></p>\n<h2 id=\"在-twinny-vscode-扩展中连接-symmetry\">在 Twinny VSCode 扩展中连接 Symmetry</h2>\n<p>如果网络中有可用的推理提供者，Symmetry 可以作为推理提供者与 Twinny VSCode 扩展配合使用。您可以在以下网址找到当前的提供者和可用模型：<a href=\"https://twinny.dev/symmetry\">https://twinny.dev/symmetry</a>。</p>\n<ol>\n<li>在 Twinny 扩展的设置中，选择您想要的模型。</li>\n<li>点击扩展中的“连接到 Symmetry”按钮。</li>\n<li>扩展将自动使用选定的模型连接到 Symmetry 网络。模型名称可以在 Twinny 扩展的设置中进行配置，请确保与 <a href=\"https://twinny.dev/symmetry\">https://twinny.dev/symmetry</a> 中列出的可用模型匹配。未来此过程将改进，允许用户从可用模型列表中选择。</li>\n<li>连接成功后，您将在扩展侧边栏看到绿色的“已连接”状态。</li>\n<li>尝试通过 Twinny 扩展发送一些请求，验证其是否按预期工作。</li>\n</ol>\n<h4 id=\"未连接状态\">未连接状态：</h4>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../../assets/symmetry_disconnected.png&#x22;,&#x22;alt&#x22;:&#x22;symmetry 未连接&#x22;,&#x22;index&#x22;:0}\"></p>\n<h4 id=\"已连接状态\">已连接状态：</h4>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../../assets/symmetry_connected.png&#x22;,&#x22;alt&#x22;:&#x22;symmetry 已连接&#x22;,&#x22;index&#x22;:0}\"></p>\n<p>查看图标：</p>\n<p><img __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../../../assets/symmetry_provider.png&#x22;,&#x22;alt&#x22;:&#x22;symmetry provider&#x22;,&#x22;index&#x22;:0}\"></p>\n<h2 id=\"成为-symmetry-提供者\">成为 Symmetry 提供者</h2>\n<p>随着 Symmetry 的发展，用户有机会通过成为提供者为网络贡献资源。以下是您需要了解的内容：</p>\n<h3 id=\"为什么考虑成为提供者\">为什么考虑成为提供者？</h3>\n<ul>\n<li>为去中心化计算网络做出贡献</li>\n<li>利用空闲计算资源</li>\n<li>未来可能有奖励机制（视网络发展而定）</li>\n<li>获取去中心化技术的经验</li>\n<li>成为机器学习研究的数据收集者</li>\n</ul>\n<h3 id=\"如何成为提供者\">如何成为提供者</h3>\n<ol>\n<li>\n<p><strong>安装 Symmetry</strong>：</p>\n<p>Unix 系统</p>\n<div class=\"expressive-code\"><link rel=\"stylesheet\" href=\"/_astro/ec.d6kn2.css\"><script type=\"module\" src=\"/_astro/ec.dy9ns.js\"></script><figure class=\"frame is-terminal not-content\"><figcaption class=\"header\"><span class=\"title\"></span><span class=\"sr-only\">Terminal window</span></figcaption><pre tabindex=\"0\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#82AAFF;--1:#3C63B3\">curl</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3C63B3\">-fsSL</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3C63B3\">https://www.twinny.dev/symmetry-unix.sh</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#7FDBCA;--1:#097174\">|</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3C63B3\">sh</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"curl -fsSL https://www.twinny.dev/symmetry-unix.sh | sh\"><div></div></button></div></figure></div>\n<p>Windows 系统</p>\n<div class=\"expressive-code\"><figure class=\"frame is-terminal not-content\"><figcaption class=\"header\"><span class=\"title\"></span><span class=\"sr-only\">Terminal window</span></figcaption><pre tabindex=\"0\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#82AAFF;--1:#3C63B3\">iwr</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3C63B3\">-useb</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3C63B3\">https://www.twinny.dev/symmetry-windows.ps1</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#7FDBCA;--1:#097174\">|</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#82AAFF;--1:#3C63B3\">iex</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"iwr -useb https://www.twinny.dev/symmetry-windows.ps1 | iex\"><div></div></button></div></figure></div>\n</li>\n<li>\n<p><strong>配置您的节点</strong>：\n在 <code dir=\"auto\">~/.config/symmetry/</code> 目录中创建 <code dir=\"auto\">provider.yaml</code> 文件，配置您的提供者设置。</p>\n</li>\n<li>\n<p><strong>启动您的节点</strong>：</p>\n<div class=\"expressive-code\"><figure class=\"frame is-terminal not-content\"><figcaption class=\"header\"><span class=\"title\"></span><span class=\"sr-only\">Terminal window</span></figcaption><pre tabindex=\"0\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#82AAFF;--1:#3C63B3\">symmetry-cli</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"symmetry-cli\"><div></div></button></div></figure></div>\n</li>\n</ol>\n<p>提供者将启动并执行一次测试调用：</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre tabindex=\"0\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">ℹ️ INFO: 🔗 Initializing client using config file: /home/twinnydotdev/.config/symmetry/provider.yaml</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">ℹ️ INFO: 📁 Symmetry client initialized.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">ℹ️ INFO: 🔑 Discovery key: xxx</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">ℹ️ INFO: 🔑 Server key: 4b4a9cc325d134dee6679e9407420023531fd7e96c563f6c5d00fd5549b77435</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">ℹ️ INFO: 🔗 Joining server, please wait.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">ℹ️ INFO: 🔗 Connected to server.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">ℹ️ INFO: ✅ Verification successful.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">ℹ️ INFO: 👋 Saying hello to your provider...</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">ℹ️ INFO: 🚀 Sending test request to http://localhost:11434/v1/chat/completions</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">ℹ️ INFO: 📡 Got response, checking stream...</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">ℹ️ INFO: ✅ Test inference call successful!</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"ℹ️ INFO: 🔗 Initializing client using config file: /home/twinnydotdev/.config/symmetry/provider.yamlℹ️ INFO: 📁 Symmetry client initialized.ℹ️ INFO: 🔑 Discovery key: xxxℹ️ INFO: 🔑 Server key: 4b4a9cc325d134dee6679e9407420023531fd7e96c563f6c5d00fd5549b77435ℹ️ INFO: 🔗 Joining server, please wait.ℹ️ INFO: 🔗 Connected to server.ℹ️ INFO: ✅ Verification successful.ℹ️ INFO: 👋 Saying hello to your provider...ℹ️ INFO: 🚀 Sending test request to http://localhost:11434/v1/chat/completionsℹ️ INFO: 📡 Got response, checking stream...ℹ️ INFO: ✅ Test inference call successful!\"><div></div></button></div></figure></div>\n<h3 id=\"程序化实现\">程序化实现</h3>\n<div class=\"expressive-code\"><figure class=\"frame is-terminal not-content\"><figcaption class=\"header\"><span class=\"title\"></span><span class=\"sr-only\">Terminal window</span></figcaption><pre tabindex=\"0\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#82AAFF;--1:#3C63B3\">npm</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3C63B3\">install</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3C63B3\">symmetry-core</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"npm install symmetry-core\"><div></div></button></div></figure></div>\n<div class=\"expressive-code\"><figure class=\"frame is-terminal not-content\"><figcaption class=\"header\"><span class=\"title\"></span><span class=\"sr-only\">Terminal window</span></figcaption><pre tabindex=\"0\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#82AAFF;--1:#3C63B3\">const</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3C63B3\">config</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3C63B3\">=</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3C63B3\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">apiHostname:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">localhost</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#3C63B3\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">apiKey:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"\"</span><span style=\"--0:#ECC48D;--1:#3C63B3\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">apiPath:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">/v1/chat/completions</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#3C63B3\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">apiPort:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3C63B3\">11434,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">apiProtocol:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">http</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#3C63B3\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">apiProvider:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">ollama</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#3C63B3\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">dataCollectionEnabled:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--1:#3C63B3\"><span style=\"--0:#82AAFF\">false</span><span style=\"--0:#ECC48D\">,</span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">maxConnections:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3C63B3\">10,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">modelName:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">llama3.1:latest</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#3C63B3\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">name:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">twinnydotdev</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#3C63B3\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">path:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">/home/twinnydotdev/.config/symmetry/data</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#3C63B3\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">public:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--1:#3C63B3\"><span style=\"--0:#82AAFF\">true</span><span style=\"--0:#ECC48D\">,</span></span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">serverKey:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">4b4a9cc325d134dee6679e9407420023531fd7e96c563f6c5d00fd5549b77435</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#3C63B3\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#82AAFF;--1:#3C63B3\">systemMessage:</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">I'm a system message</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">};</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#82AAFF;--1:#3C63B3\">const</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3C63B3\">provider</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3C63B3\">=</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3C63B3\">new</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#ECC48D;--1:#3C63B3\">SymmetryProvider</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#82AAFF;--1:#3C63B3\">config</span><span style=\"--0:#D6DEEB;--1:#403F53\">);</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"const config = {  apiHostname: &#x22;localhost&#x22;,  apiKey: &#x22;&#x22;,  apiPath: &#x22;/v1/chat/completions&#x22;,  apiPort: 11434,  apiProtocol: &#x22;http&#x22;,  apiProvider: &#x22;ollama&#x22;,  dataCollectionEnabled: false,  maxConnections: 10,  modelName: &#x22;llama3.1:latest&#x22;,  name: &#x22;twinnydotdev&#x22;,  path: &#x22;/home/twinnydotdev/.config/symmetry/data&#x22;,  public: true,  serverKey: &#x22;4b4a9cc325d134dee6679e9407420023531fd7e96c563f6c5d00fd5549b77435&#x22;,  systemMessage: &#x22;I&#x27;m a system message&#x22;};const provider = new SymmetryProvider(config);\"><div></div></button></div></figure></div>\n<h3 id=\"提供者配置\">提供者配置</h3>\n<p><code dir=\"auto\">provider.yaml</code> 示例：</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre tabindex=\"0\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">apiHostname</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#ECC48D;--1:#3C63B3\">localhost</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#809191;--1:#616671\"># 推理服务器的主机地址</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">apiKey</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#809191;--1:#616671\"># 推理服务器的 API 密钥</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">apiPath</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#ECC48D;--1:#3C63B3\">/v1/chat/completions</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#809191;--1:#616671\"># 推理接口路径</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">apiPort</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#F78C6C;--1:#AA0982\">11434</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#809191;--1:#616671\"># 推理服务器的端口</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">apiProtocol</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#ECC48D;--1:#3C63B3\">http</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#809191;--1:#616671\"># 推理服务器的协议</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">apiProvider</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#ECC48D;--1:#3C63B3\">ollama</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#809191;--1:#616671\"># 推理提供者名称</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">dataCollectionEnabled</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#FF5874;--1:#A54A4A\">true</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#809191;--1:#616671\"># 是否启用数据收集</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">maxConnections</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#F78C6C;--1:#AA0982\">10</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#809191;--1:#616671\"># 最大连接数</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">modelName</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#ECC48D;--1:#3C63B3\">llama3:8b</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#809191;--1:#616671\"># 您提供的模型名称</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">name</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#ECC48D;--1:#3C63B3\">provider</span><span style=\"--0:#D6DEEB;--1:#403F53\">  </span><span style=\"--0:#809191;--1:#616671\"># 您的提供者名称</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">path</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#ECC48D;--1:#3C63B3\">/home/richard/.config/symmetry/default</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#809191;--1:#616671\"># 数据存储目录</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">public</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#FF5874;--1:#A54A4A\">true</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#809191;--1:#616671\"># 是否公开访问您的提供者</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">serverKey</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#ECC48D;--1:#3C63B3\">4b4a9cc325d134dee6679e9407420023531fd7e96c563f6c5d00fd5549b77435</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#809191;--1:#616671\"># Symmetry 服务器密钥</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#111111\">systemMessage</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">I'm a system message</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\"> </span><span style=\"--0:#809191;--1:#616671\"># 可选的系统消息</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"apiHostname: localhost # 推理服务器的主机地址apiKey: # 推理服务器的 API 密钥apiPath: /v1/chat/completions # 推理接口路径apiPort: 11434 # 推理服务器的端口apiProtocol: http # 推理服务器的协议apiProvider: ollama # 推理提供者名称dataCollectionEnabled: true # 是否启用数据收集maxConnections: 10 # 最大连接数modelName: llama3:8b # 您提供的模型名称name: provider  # 您的提供者名称path: /home/richard/.config/symmetry/default # 数据存储目录public: true # 是否公开访问您的提供者serverKey: 4b4a9cc325d134dee6679e9407420023531fd7e96c563f6c5d00fd5549b77435 # Symmetry 服务器密钥systemMessage: &#x22;I&#x27;m a system message&#x22; # 可选的系统消息\"><div></div></button></div></figure></div>\n<p>根据您的设置和偏好调整这些配置。</p>\n<h2 id=\"提供者注意事项\">提供者注意事项</h2>\n<ul>\n<li>确保您的节点安全且已更新</li>\n<li>注意通过您的节点传输的数据</li>\n<li>保持稳定和可靠的连接</li>\n</ul>\n<h2 id=\"超越-vscode未来发展\">超越 VSCode：未来发展</h2>\n<p>虽然目前专注于 Twinny 扩展，但 Symmetry 的潜力不仅限于此：</p>\n<ul>\n<li><strong>独立使用</strong>：计划开发一个 Node.js 包，使开发者可以在任何 Node.js 应用中利用 Symmetry 网络。</li>\n<li><strong>API 访问</strong>：未来版本可能包括直接的 API 访问，支持与广泛应用和服务的集成。</li>\n</ul>\n<h2 id=\"常见问题-faq\">常见问题 (FAQ)</h2>\n<ol>\n<li>\n<p><strong>Q: Symmetry 仅限于 VSCode 用户吗？</strong><br>\nA: 目前与 Twinny VSCode 扩展集成，但未来计划通过 Node.js 包和直接 API 访问拓展 Symmetry 的可访问性。</p>\n</li>\n<li>\n<p><strong>Q: 我可以用 Symmetry 做聊天和自动补全吗？</strong><br>\n目前，Symmetry 设计用于聊天，但未来可能会用于其他用途（例如自动补全）。</p>\n</li>\n<li>\n<p><strong>Q: Symmetry 如何确保数据隐私？</strong><br>\nA: Symmetry 使用加密连接进行所有通信。在初始匹配后，客户端与提供者之间直接通信，绕过中央服务器。然而，提供者可以访问解密后的数据进行处理，因此在使用网络时请考虑数据的敏感性。</p>\n</li>\n<li>\n<p><strong>Q: 我可以在自己的项目中使用 Symmetry 吗？</strong><br>\n目前，Symmetry 主要用于 Twinny VSCode 扩展，但计划推出 Node.js 包，使其可以在各种项目中广泛集成。</p>\n</li>\n<li>\n<p><strong>Q: 成为提供者会有奖励吗？</strong><br>\n目前没有正式的奖励系统，但随着网络的发展，可能会引入奖励机制。目前作为提供者贡献网络，是一个支持去中心化技术并获得经验的机会。</p>\n</li>\n<li>\n<p><strong>Q: 如何获取 Symmetry 开发的最新动态？</strong><br>\nA: 请关注 Symmetry 官方 GitHub 仓库和文档，获取最新更新和公告。</p>\n</li>\n</ol>\n<p>通过探索 Symmetry，无论是作为用户通过 Twinny 扩展，还是作为提供者，您都在参与去中心化计算技术的发展。随着 Symmetry 的演进，它旨在为开发者和研究人员提供更灵活、强大的选择。</p>");
	

				const frontmatter = {"title":"Symmetry - 推理网络","description":"探索 Symmetry，一个与 Twinny VSCode 扩展集成的去中心化计算网络及其扩展功能。"};
				const file = "/home/richard/Desktop/twinny/twinny-docs/src/content/docs/zh-cn/general/symmetry.md";
				const url = undefined;
				function rawContent() {
					return "\nSymmetry 是一个实验性的去中心化计算网络，允许用户共享和访问计算资源。最初与 Twinny VSCode 扩展集成，Symmetry 有潜力成为开发者、研究人员和数据科学家的强大工具。\n\n**注意**：Symmetry 仍处于 alpha 版本，可能会出现一些问题。如遇到问题，请在 [https://github.com/twinnydotdev/symmetry](https://github.com/twinnydotdev/symmetry) 上报告。\n\n![symmetry 结构图](../../../../assets/symmetry-architecture.png)\n\nSymmetry 客户端采用 MIT 许可证。\n\n[https://github.com/twinnydotdev/symmetry](https://github.com/twinnydotdev/symmetry)\n\n\n## 在 Twinny VSCode 扩展中连接 Symmetry\n\n如果网络中有可用的推理提供者，Symmetry 可以作为推理提供者与 Twinny VSCode 扩展配合使用。您可以在以下网址找到当前的提供者和可用模型：[https://twinny.dev/symmetry](https://twinny.dev/symmetry)。\n\n1. 在 Twinny 扩展的设置中，选择您想要的模型。\n2. 点击扩展中的“连接到 Symmetry”按钮。\n3. 扩展将自动使用选定的模型连接到 Symmetry 网络。模型名称可以在 Twinny 扩展的设置中进行配置，请确保与 [https://twinny.dev/symmetry](https://twinny.dev/symmetry) 中列出的可用模型匹配。未来此过程将改进，允许用户从可用模型列表中选择。\n4. 连接成功后，您将在扩展侧边栏看到绿色的“已连接”状态。\n5. 尝试通过 Twinny 扩展发送一些请求，验证其是否按预期工作。\n\n#### 未连接状态：\n![symmetry 未连接](../../../../assets/symmetry_disconnected.png)\n\n#### 已连接状态：\n![symmetry 已连接](../../../../assets/symmetry_connected.png)\n\n查看图标：\n\n![symmetry provider](../../../../assets/symmetry_provider.png)\n\n## 成为 Symmetry 提供者\n\n随着 Symmetry 的发展，用户有机会通过成为提供者为网络贡献资源。以下是您需要了解的内容：\n\n### 为什么考虑成为提供者？\n\n- 为去中心化计算网络做出贡献\n- 利用空闲计算资源\n- 未来可能有奖励机制（视网络发展而定）\n- 获取去中心化技术的经验\n- 成为机器学习研究的数据收集者\n\n### 如何成为提供者\n\n1. **安装 Symmetry**：\n\n   Unix 系统\n   ```bash\n   curl -fsSL https://www.twinny.dev/symmetry-unix.sh | sh\n   ```\n\n   Windows 系统\n   ```bash\n   iwr -useb https://www.twinny.dev/symmetry-windows.ps1 | iex\n   ```\n\n2. **配置您的节点**：\n   在 `~/.config/symmetry/` 目录中创建 `provider.yaml` 文件，配置您的提供者设置。\n\n3. **启动您的节点**：\n   ```bash\n   symmetry-cli\n   ```\n\n提供者将启动并执行一次测试调用：\n\n```\nℹ️ INFO: 🔗 Initializing client using config file: /home/twinnydotdev/.config/symmetry/provider.yaml\nℹ️ INFO: 📁 Symmetry client initialized.\nℹ️ INFO: 🔑 Discovery key: xxx\nℹ️ INFO: 🔑 Server key: 4b4a9cc325d134dee6679e9407420023531fd7e96c563f6c5d00fd5549b77435\nℹ️ INFO: 🔗 Joining server, please wait.\nℹ️ INFO: 🔗 Connected to server.\nℹ️ INFO: ✅ Verification successful.\nℹ️ INFO: 👋 Saying hello to your provider...\nℹ️ INFO: 🚀 Sending test request to http://localhost:11434/v1/chat/completions\nℹ️ INFO: 📡 Got response, checking stream...\nℹ️ INFO: ✅ Test inference call successful!\n```\n\n### 程序化实现\n\n```bash\nnpm install symmetry-core\n```\n\n```bash\nconst config = {\n  apiHostname: \"localhost\",\n  apiKey: \"\",\n  apiPath: \"/v1/chat/completions\",\n  apiPort: 11434,\n  apiProtocol: \"http\",\n  apiProvider: \"ollama\",\n  dataCollectionEnabled: false,\n  maxConnections: 10,\n  modelName: \"llama3.1:latest\",\n  name: \"twinnydotdev\",\n  path: \"/home/twinnydotdev/.config/symmetry/data\",\n  public: true,\n  serverKey: \"4b4a9cc325d134dee6679e9407420023531fd7e96c563f6c5d00fd5549b77435\",\n  systemMessage: \"I'm a system message\"\n};\n\nconst provider = new SymmetryProvider(config);\n```\n\n\n### 提供者配置\n\n`provider.yaml` 示例：\n\n```yaml\napiHostname: localhost # 推理服务器的主机地址\napiKey: # 推理服务器的 API 密钥\napiPath: /v1/chat/completions # 推理接口路径\napiPort: 11434 # 推理服务器的端口\napiProtocol: http # 推理服务器的协议\napiProvider: ollama # 推理提供者名称\ndataCollectionEnabled: true # 是否启用数据收集\nmaxConnections: 10 # 最大连接数\nmodelName: llama3:8b # 您提供的模型名称\nname: provider  # 您的提供者名称\npath: /home/richard/.config/symmetry/default # 数据存储目录\npublic: true # 是否公开访问您的提供者\nserverKey: 4b4a9cc325d134dee6679e9407420023531fd7e96c563f6c5d00fd5549b77435 # Symmetry 服务器密钥\nsystemMessage: \"I'm a system message\" # 可选的系统消息\n```\n\n根据您的设置和偏好调整这些配置。\n\n## 提供者注意事项\n\n- 确保您的节点安全且已更新\n- 注意通过您的节点传输的数据\n- 保持稳定和可靠的连接\n\n## 超越 VSCode：未来发展\n\n虽然目前专注于 Twinny 扩展，但 Symmetry 的潜力不仅限于此：\n\n- **独立使用**：计划开发一个 Node.js 包，使开发者可以在任何 Node.js 应用中利用 Symmetry 网络。\n- **API 访问**：未来版本可能包括直接的 API 访问，支持与广泛应用和服务的集成。\n\n## 常见问题 (FAQ)\n\n1. **Q: Symmetry 仅限于 VSCode 用户吗？**  \n   A: 目前与 Twinny VSCode 扩展集成，但未来计划通过 Node.js 包和直接 API 访问拓展 Symmetry 的可访问性。\n\n2. **Q: 我可以用 Symmetry 做聊天和自动补全吗？**  \n   目前，Symmetry 设计用于聊天，但未来可能会用于其他用途（例如自动补全）。\n\n3. **Q: Symmetry 如何确保数据隐私？**  \n   A: Symmetry 使用加密连接进行所有通信。在初始匹配后，客户端与提供者之间直接通信，绕过中央服务器。然而，提供者可以访问解密后的数据进行处理，因此在使用网络时请考虑数据的敏感性。\n\n4. **Q: 我可以在自己的项目中使用 Symmetry 吗？**  \n   目前，Symmetry 主要用于 Twinny VSCode 扩展，但计划推出 Node.js 包，使其可以在各种项目中广泛集成。\n\n5. **Q: 成为提供者会有奖励吗？**  \n   目前没有正式的奖励系统，但随着网络的发展，可能会引入奖励机制。目前作为提供者贡献网络，是一个支持去中心化技术并获得经验的机会。\n\n6. **Q: 如何获取 Symmetry 开发的最新动态？**  \n   A: 请关注 Symmetry 官方 GitHub 仓库和文档，获取最新更新和公告。\n\n通过探索 Symmetry，无论是作为用户通过 Twinny 扩展，还是作为提供者，您都在参与去中心化计算技术的发展。随着 Symmetry 的演进，它旨在为开发者和研究人员提供更灵活、强大的选择。";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"在-twinny-vscode-扩展中连接-symmetry","text":"在 Twinny VSCode 扩展中连接 Symmetry"},{"depth":4,"slug":"未连接状态","text":"未连接状态："},{"depth":4,"slug":"已连接状态","text":"已连接状态："},{"depth":2,"slug":"成为-symmetry-提供者","text":"成为 Symmetry 提供者"},{"depth":3,"slug":"为什么考虑成为提供者","text":"为什么考虑成为提供者？"},{"depth":3,"slug":"如何成为提供者","text":"如何成为提供者"},{"depth":3,"slug":"程序化实现","text":"程序化实现"},{"depth":3,"slug":"提供者配置","text":"提供者配置"},{"depth":2,"slug":"提供者注意事项","text":"提供者注意事项"},{"depth":2,"slug":"超越-vscode未来发展","text":"超越 VSCode：未来发展"},{"depth":2,"slug":"常见问题-faq","text":"常见问题 (FAQ)"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
